[apply]

	# Detect whitespace errors when applying a patch
	whitespace = fix

[core]

	# Use custom `.gitignore` and `.gitattributes`
	excludesfile = ~/.gitignore_global  # Global gitignore
	attributesfile = ~/.gitattributes

	# Treat spaces before tabs and all kinds of trailing whitespace as an error
	# [default] trailing-space: looks for spaces at the end of a line
	# [default] space-before-tab: looks for spaces before tabs at the beginning of a line
	whitespace = space-before-tab,-indent-with-non-tab,trailing-space

	# Make `git rebase` safer on macOS
	# More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
	trustctime = false

	# Prevent showing files whose names contain non-ASCII symbols as unversioned.
	# http://michael-kuehnel.de/git/2014/11/21/git-mac-osx-and-german-umlaute.html
	precomposeunicode = false
	editor = vim

[color]

	# Use colors in Git commands that are capable of colored output when
	# outputting to the terminal. (This is the default setting in Git â‰¥ 1.8.4.)
	ui = auto

[color "branch"]

	current = yellow reverse
	local = yellow
	remote = green

[color "diff"]

	meta = yellow bold
	frag = magenta bold # line info
	old = red # deletions
	new = green # additions

[color "status"]

	added = yellow
	changed = green
	untracked = cyan

[commit]

	# https://help.github.com/articles/signing-commits-using-gpg/
	#gpgsign = true

[diff]

	# Detect copies as well as renames
	renames = copies

	# https://blog.gitbutler.com/how-git-core-devs-configure-git/
	# 4 built in diff algorithms it can use: myers, minimal, patience, histogram
	algorithm = histogram # Objectively better diffs than default
	colorMoved = plain # Colour moves differently to adds/deletes
	mnemonicPrefix = true

[diff "bin"]

	# Use `hexdump` to diff binary files
	textconv = hexdump -v -C

[help]

	# Automatically correct and execute mistyped commands
	autocorrect = prompt

[merge]

	# Include summaries of merged commits in newly created merge commit messages
	log = true

[push]

	default = simple # Push to remote branch with same name by default
	# Make `git push` push relevant annotated tags when pushing branches out.
	followTags = true
	autoSetupRemote = true

# https://blog.gitbutler.com/how-git-core-devs-configure-git/
[column]
	ui = auto # Use columns
[branch]
	sort = -committerdate # Sort branches by committer date, not alpha
[tag]
	sort = version:refname # Sort tags by refname, not alpha
[init]
    defaultBranch = master # Just pick a default and use it, could be `main`
[fetch]
	# prune branches and tags that are deleted on remote
	prune = true
	pruneTags = true
	all = true
[commit]
	verbose = true # Diff shown in commit editor
[rebase]
	autoSquash = true
	autoStash = true
	updateRefs = true

# URL shorthands

[url "git@github.com:"]

	insteadOf = "gh:"
	pushInsteadOf = "github:"
	pushInsteadOf = "git://github.com/"

[url "git://github.com/"]

	insteadOf = "github:"

[url "git@gist.github.com:"]

	insteadOf = "gst:"
	pushInsteadOf = "gist:"
	pushInsteadOf = "git://gist.github.com/"

[url "git://gist.github.com/"]

	insteadOf = "gist:"
[credential]
	helper = osxkeychain
[gpg]
	# program = gpg1
